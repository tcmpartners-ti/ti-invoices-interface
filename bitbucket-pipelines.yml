image: gradle:8.3.0-jdk17

clone:
  depth: full

definitions:
  services:
    docker:
      memory: 2048

  caches:
    sonar: ~/.sonar/cache

  steps:
    - step: &build
        name: Build
        caches: [ gradle ]
        script:
          - gradle build --no-daemon -x test

    - step: &unit-tests
        name: Unit tests
        caches: [ gradle ]
        script:
          - gradle test --no-daemon

    - step: &integration-tests
        name: Integration tests
        services: [ docker ]
        caches: [ gradle, docker ]
        script:
          - export TESTCONTAINERS_RYUK_DISABLED=true
          - gradle integrationTest --no-daemon

    - step: &sonar-scan-test
        name: Scan and unit test project with sonar
        caches: [ gradle, sonar ]
        script:
          - gradle build jacocoTestReport sonar
        artifacts:
          - build/libs/**

    - step: &deploy-dev
        name: Deploy to development
        caches: [ gradle, docker ]
        services: [ docker ]
        script:
          - echo $CR_PASS_DEV | docker login $CR_NAME_DEV -u $CR_USER_DEV --password-stdin
          - SHORT_COMMIT=$(echo $BITBUCKET_COMMIT | cut -c1-7)
          - DOCKER_BUILDKIT=1 docker build -t $CR_NAME_DEV/$IMAGE:$SHORT_COMMIT -t $CR_NAME_DEV/$IMAGE:latest . --build-arg="COMMIT=$SHORT_COMMIT"
          - docker push $CR_NAME_DEV/$IMAGE --all-tags

    - step: &deploy-test
        name: Deploy to test
        caches: [ gradle, docker ]
        services: [ docker ]
        script:
          - echo $CR_PASS_TEST | docker login $CR_NAME_TEST -u $CR_USER_TEST --password-stdin
          - SHORT_COMMIT=$(echo $BITBUCKET_COMMIT | cut -c1-7)
          - DOCKER_BUILDKIT=1 docker build -t $CR_NAME_TEST/$IMAGE:$SHORT_COMMIT -t $CR_NAME_TEST/$IMAGE:latest . --build-arg="COMMIT=$SHORT_COMMIT"
          - docker push $CR_NAME_TEST/$IMAGE --all-tags

pipelines:
  branches:
    # Production Branch
    main:
      - step: *build
      - step: *unit-tests

    # Staging branches
    '{develop,hotfix/*}':
      - step: *build
      - parallel:
          steps:
            - step: *sonar-scan-test
            - step: *integration-tests
      - step: *deploy-test

    # Development Branches
    features:
      - step: *build
      - parallel:
          steps:
            - step: *unit-tests
              # - step: *integration-testsS
      - step: *deploy-dev
