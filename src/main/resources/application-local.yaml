spring:
  output.ansi.enabled: ALWAYS

  datasource:
    host: ${DB_HOST}
    port: ${DB_PORT}
    username: ${DB_USER}
    password: ${DB_PASS}
    url: "jdbc:sqlserver://${spring.datasource.host}:${spring.datasource.port};database=TIZONE1;encrypt=true;trustServerCertificate=true;"
    driver-class-name: "com.microsoft.sqlserver.jdbc.SQLServerDriver"

  data.redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASS}

  activemq:
    host: ${MQ_HOST}
    port: ${MQ_PORT}
    user: ${MQ_USER}
    password: ${MQ_PASS}
    broker-url: "tcp://${spring.activemq.host}:${spring.activemq.port}"
    packages:
      trust-all: true

bp:
  api-gee:
    url:
      dev: "https://api-dev.pichincha.com"
      test: "https://api-test.pichincha.com"

    headers.device: "TradeInnovationInterfaceDEV"

    # Credentials might change per service.
    services:
      business-banking:
        app-id: ${API_GEE_APP_ID}
        api-key: ${API_GEE_KEY}
        api-secret: ${API_GEE_SECRET}
        url: "${bp.api-gee.url.dev}/business-banking/v1"
      payment-execution:
        app-id: ${API_GEE_APP_ID}
        api-key: ${API_GEE_KEY}
        api-secret: ${API_GEE_SECRET}
        url: "${bp.api-gee.url.test}/payment-execution/v1"
      operational-gateway:
        app-id: ${API_GEE_APP_ID}
        api-key: ${API_GEE_KEY}
        api-secret: ${API_GEE_SECRET}
        url: "${bp.api-gee.url.test}/operational-gateway/v2"

invoice:
  route:
    create:
      from: "direct:createInvoiceInTI"
      to: "activemq:queue:${ti.queue.pub.name}?replyTo=${ti.queue.reply.jndi}"

    create-bulk:
      from: "direct:bulkCreateInvoicesInTi"
      to: "${invoice.route.create.from}"

    event-listener:
      max-retries: 3
      retry-delay: 1000 # ms

      from: "activemq:queue:${ti.queue.reply.name}"
      to: "direct:sendNotificationToApiGee"

    finance:
      from: "direct:financeInvoiceInTI"
      to: "activemq:queue:${ti.queue.pub.name}?replyTo=${ti.queue.reply.jndi}"
