spring:
  datasource:
    host: "<...>"
    port: "<...>"
    username: "<...>"
    password: "<...>"
    url: "jdbc:sqlserver://${spring.datasource.host}:${spring.datasource.port};database=TIZONE1;encrypt=true;trustServerCertificate=true;"
    driver-class-name: "com.microsoft.sqlserver.jdbc.SQLServerDriver"

  activemq:
    host: "<...>"
    port: "<...>"
    user: "<...>"
    password: "<...>"
    broker-url: "tcp://${spring.activemq.host}:${spring.activemq.port}"
    packages:
      trust-all: true

  jpa:
    show-sql: true
    database-platform: "org.hibernate.dialect.SQLServerDialect"
    properties:
      hibernate:
        dialect: "org.hibernate.dialect.SQLServerDialect"

ti:
  queue:
    pub:
      name: "BP.DIGIBANK.TO.FTI"
    reply:
      name: "BP.DIGIBANK.TO.FTI.REPLY"
      jndi: "queue/digibankInIncomingReply"

bp:
  api-gee:
    headers:
      device: "TradeInnovationInterface"

    app-id: "<...>"
    api-encryption-key: "<...>"
    api-secret: "<...>"

    base-url: "http://localhost:5000"
    services:
      business-banking:
        operational-gateway:
          url: "${bp.api-gee.base-url}/business-banking/v1/operational-gateway"

invoice:
  route:
    create:
      from: "direct:createInvoiceInTI"
      to: "activemq:queue:${ti.queue.pub.name}?replyTo=${ti.queue.reply.jndi}"

    create-bulk:
      from: "direct:bulkCreateInvoicesInTi"
      to: "activemq:queue:${ti.queue.pub.name}?replyTo=${ti.queue.reply.jndi}"

    creation-listener:
      from: "activemq:queue:${ti.queue.reply.name}"
      to: "direct:sendNotificationToApiGee"

    finance:
      from: "direct:financeInvoiceInTI"
      to: "activemq:queue:${ti.queue.pub.name}?replyTo=${ti.queue.reply.jndi}"

program:
  route:
    create:
      from: "direct:createProgramInTI"
      to: "mock:programQueue"