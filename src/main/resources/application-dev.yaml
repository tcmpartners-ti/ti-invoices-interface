# If set to `true`, the microservice will store scheduled messages in db (to be processed afterward),
# otherwise it will send the messages to the processing queue.
config.schedule-messages: ${SCHEDULE_MESSAGES}

spring:
  datasource:
    host: ${DB_HOST}
    port: ${DB_PORT}
    username: ${DB_USER}
    password: ${DB_PASS}
    url: "jdbc:sqlserver://${spring.datasource.host}:${spring.datasource.port};database=TIZONE1;encrypt=true;trustServerCertificate=true;"
    driver-class-name: "com.microsoft.sqlserver.jdbc.SQLServerDriver"

  data.redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASS}

  activemq:
    host: ${MQ_HOST}
    port: ${MQ_PORT}
    user: ${MQ_USER}
    password: ${MQ_PASS}
    broker-url: "tcp://${spring.activemq.host}:${spring.activemq.port}"
    packages:
      trust-all: true

bp:
  service:
    operational-gateway:
      template-id: "305003729"
      business-banking-url: "https://bancaempresas.pichincha.com"
    payment-execution:
      bgl-account: "259090337001"

  api-gee:
    headers.device: "TradeInnovationInterfaceDEV"

    credentials:
      app-id: ${API_GEE_APP_ID}
      api-key: ${API_GEE_KEY}
      api-secret: ${API_GEE_SECRET}

    services:
      business-banking:
        url: "${bp.api-gee.url.dev}/business-banking/v1"
      payment-execution:
        url: "${bp.api-gee.url.test}/payment-execution/v1"
      operational-gateway:
        url: "${bp.api-gee.url.test}/operational-gateway/v2"
      corporate-loan:
        user: ${CL_USER}
        operation-token: ${CL_OP_TOKEN}
        url: "${bp.api-gee.url.test}/domain/corporate-loan/v1"

sftp:
  user: ${SFTP_USER}
  private-key: ${SFTP_PRIVATE_KEY}
  host: ${SFTP_HOST}
  port: ${SFTP_PORT}
  local-dir:
    full-output: "/app/tmp/full-output"
    summary: "/app/tmp/summary"
  remote-dir:
    full-output: "/ti/full-output"
    summary: "/ti/summary"

fcm:
  activemq:
    host: ${FCM_MQ_HOST}
    port: ${FCM_MQ_PORT}
    user: ${FCM_MQ_USER}
    password: ${FCM_MQ_PASS}
    broker-url: "tcp://${fcm.activemq.host}:${fcm.activemq.port}"
    packages.trust-all: true

  config:
    debtor-id: ${FCM_DEBTOR_ID}

  api:
    headers.user-id: ${FCM_USER_ID}

    services:
      single-electronic-payment:
        url: "${fcm.api.url.dev}/fcmclient/services/openapi/electronic"

  route:
    payment-result.from: "activemqFcm:queue:${fcm.queue.notification.sub.name}"
    sftp:
      from-full-output: "direct:sendFullOutputToFcmViaSftp"
      from-summary: "direct:sendSummaryToFcmViaSftp"

ti.route:
  fti:
    out:
      from: "direct:sendToFtiOutgoingQueue"
      to: "activemq:queue:${ti.queue.fti.pub.name}?replyTo=${ti.queue.fti.reply.jndi}"
    in-reply.from: "activemq:queue:${ti.queue.fti.reply.name}"
  ticc.in.from: "activemq:queue:${ti.queue.ticc.sub.name}"
  scheduler.in.from: "activemq:queue:${ti.queue.scheduler.sub.name}"
